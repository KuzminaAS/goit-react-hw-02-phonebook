{"version":3,"sources":["components/ContactForm/fields.js","components/ContactForm/initialValues.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["fields","type","name","autoComplete","pattern","title","initialValues","caseValueName","caseValueNumber","caseValueButton","ContactForm","state","number","handleChange","evt","currentTarget","value","setState","handleSubmit","event","preventDefault","props","onSubmit","resetForm","this","onChange","required","Component","ContactListItem","onDelete","onClick","ContactList","list","contactElements","map","item","index","id","Filter","placeholder","App","contacts","filter","addContact","contact","shortid","generate","prevState","find","toLowerCase","alert","newContacts","push","splice","changeFilter","e","normalizeFilter","visibleContacts","includes","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95c0cdfd.chunk.js","sourcesContent":["export const fields = {\n\n    caseValueName: {\n        type: \"text\",\n        name: \"name\",\n        autoComplete: 'off',\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        title:\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n    },\n    caseValueNumber: {\n        type: \"tel\",\n        name: \"number\",\n        autoComplete: 'off',\n        pattern: \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\n        title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n    },\n    caseValueButton: {\n        type:\"submit\"\n    }\n\n}","export const initialValues = {\n  caseValueName: \" \",\n  caseValueNumber: \" \",\n    caseValueButton: \" \",\n};","import React, { Component } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { fields } from \"./fields\";\nimport { initialValues } from './initialValues';\n\n// import styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    \n    state = {\n    name: '',\n    number: ''\n    }\n  \n    handleChange = (evt) => {\n      const { name, value } = evt.currentTarget;\n      this.setState({\n        [name]: value,\n      });\n    }\n  \n   handleSubmit = (event) => {\n     event.preventDefault();\n     this.props.onSubmit(this.state);\n     this.resetForm();\n   }\n  \n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: ''\n    })\n  }\n    render() {\n      return (\n        <Formik\n          onSubmit={this.handleSubmit}\n          initialValues={initialValues}\n        >\n          <Form>\n      <label >\n          Name\n        <Field\n            value={this.state.name}\n            onChange={this.handleChange}\n            {...fields.caseValueName}\n            required\n         /> \n        </label>\n            \n         <label >\n        Number  \n        <Field\n        value={this.state.number}\n        onChange={this.handleChange}\n        {...fields.caseValueNumber}  \n        required\n        /> \n        </label>\n      <button {...fields.caseValueButton}>Add contact </button>\n            </Form>\n          </Formik>\n    )\n     }  \n};\n\nexport default ContactForm;\n","import React from 'react';\n// import styles from './ContactListItem.module.css'\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number, onDelete }) => {\n    return (\n        <li>\n            {name} {number}\n            <button type='button' onClick={onDelete}>X</button>\n        </li>\n    )\n};\n\nexport default ContactListItem;\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}\n","import React from 'react';\n// import styles from './ContactList.module.css';\nimport ContactListItem from '../ContactListItem';\n\nconst ContactList = ({ list, onDelete }) => {\n\n    const contactElements = list.map((item, index) => <ContactListItem  key={item.id} {...item} onDelete={()=>onDelete(index)} />)\n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n};\n\nexport default ContactList;\n","import React from 'react';\n// import styles from './Filter.module.css';\n\nconst Filter = ({value, onChange }) =>  {\n   \n    return (\n        <label>\n            Find contacts by name\n        <input\n            type=\"text\"\n            name=\"name\"\n            value={value}\n            onChange = {onChange}\n            placeholder=\"Search for name...\"\n            />\n        </label>\n    )\n   \n\n};\n\nexport default Filter;\n\n\n","import React, { Component } from \"react\";\n\nimport shortid from \"shortid\";\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n\n    state = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n      ],\n    filter: ''\n  }\n\n  addContact = ({name,number}) => {\n     const contact = {\n        id: shortid.generate(),\n        name,\n        number\n      }\n\n    this.setState(prevState => {\n     const { contacts } = prevState;\n     \n      const result = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number)\n      \n      if (result) {\n        \n        alert(`${name} is already in contacts`);\n        return {contacts}\n      } else {\n\n      const newContacts = [...contacts];\n      newContacts.push(contact);\n      return {contacts : newContacts}\n      }\n\n    })\n\n  }\n\n  onDelete = (index) => {\n    this.setState(prevState => {\n      const newContacts = [...prevState.contacts]\n      newContacts.splice(index, 1);\n      return {contacts : newContacts}\n    })\n  }\n  \n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  }\n  render() {\n\n    const { contacts, filter } = this.state;\n    const { addContact, onDelete } = this;\n\n    const normalizeFilter = filter.toLowerCase();\n    \n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n\n    return (\n    <div className=\"App\">\n  \n    <h1>Phonebook</h1>\n    <ContactForm onSubmit={addContact}/>\n\n    <h2>Contacts</h2>\n    <Filter value = {filter} onChange = {this.changeFilter} />\n     <ContactList list={visibleContacts} onDelete={onDelete}/>\n    </div>\n  )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}